plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'

}

group = 'com.sh'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    testImplementation 'org.projectlombok:lombok:1.18.22'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // komoran
    implementation 'com.github.shin285:KOMORAN:3.3.9'

    // apache
    implementation 'org.apache.httpcomponents:httpclient:4.5.14'
//    implementation 'org.apache.httpcomponents:httpclient:5.1.4'
    implementation 'org.apache.httpcomponents.client5:httpclient5'
    implementation 'com.google.code.gson:gson:2.8.5'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Redis session
    implementation 'org.springframework.session:spring-session-data-redis'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

    // Querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // Querydsl 끝


    implementation group: 'com.theokanning.openai-gpt3-java', name: 'client', version: '0.9.0'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
//    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}



tasks.named('test') {
    useJUnitPlatform()
}


// gradle build시 xx-plain.jar 나오는거 막기(gradle 2.5부터 생김)
jar{
    enabled = false
}

// gradle build 시 test 때문에 fail나는거 막기, 테스트를 안함
test.onlyIf{
    !project.hasProperty('test')
}